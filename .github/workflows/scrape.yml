name: Scrape

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *

permissions:
  contents: write

jobs:
  run-scrape:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip pipenv
        pipenv install

    - name: Setup Rclone
      uses: AnimMouse/setup-rclone@v1
      with:
        rclone_config: ${{ secrets.RCLONE_CONFIG }}
        disable_base64: true

    - name: Scrape texts
      id: texts
      run: |
        pipenv run python scripts/texts.py "${{ vars.SCRAPE_TEXTS_URLS }}"

    - name: Scrape audios
      id: audios
      run: rclone lsjson --include "*.{flac,mp3}"  "lesbarques-audio:Le Barche sélection"

    - name: Scrape images (TODO)
      id: images
      # run: rclone lsjson --include "*.jpg"  "lesbarques-images:Les Barques sélection"
      run: |
        echo '{"images": []}'

    - name: Update manifest
      run: |
        echo '${{ steps.texts.outputs.result }}' | jq '.' > docs/texts.json
        echo '${{ steps.audios.outputs.result }}' | jq '.' > docs/audios.json
        echo '${{ steps.images.outputs.result }}' | jq '.' > docs/images.json
        jq -s "{ timestamp: \"$(date +"%Y-%m-%d_%H-%M-%S")\", images: .[0].images, texts: .[0].texts, audios: .[1] | map(.Path) }" docs/texts.json docs/audios.json docs/images.json > docs/manifest.json

    - name: Commit and push changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "Add scrape results [skip ci]"
        git push --force origin HEAD:${{ github.ref }}
